<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">
	<sub-flow name="create-process-sub-flow"
		doc:id="1e2ae279-7aa2-4b27-996c-bd2f6d1c3d5b">
		<ee:transform doc:name="Post Transaction XML"
			doc:id="50bbe9a6-d123-4a7e-be7c-f29e81944d9b">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable
					resource="dwl/create-check/pos-transaction-xml.dwl"
					variableName="postTransactionXML" />
			</ee:variables>
		</ee:transform>
		<set-variable
			value="#[output application/json&#10;---&#10;{&#10;	methodName: 'CreateCheck',&#10;	storeId: if ( vars.storeId != null ) vars.storeId else vars.vrStoreId,&#10;	checkNumber: 'Null',&#10;	checkSequence: 'Null',&#10;	employeeNumber: 'Null',&#10;	tableNumber: 'Null',&#10;	status: '1',&#10;	message: vars.postTransactionXML&#10;}]"
			doc:name="logData" doc:id="9f8e1fa9-a382-41d5-b644-40be1d39fedb"
			variableName="logData" />
		<flow-ref doc:name="insert-online-ordering-logs"
			doc:id="744dd878-4cf4-4e6f-8ff1-a713c0f72d18"
			name="insert-online-ordering-logs" />
		<flow-ref doc:name="retrieve-store-ip-properties" doc:id="ae14da2f-e4f5-484f-bd63-a34d4548ca0e" name="retrieve-store-ip-properties" />
		<ee:transform doc:name="Store IP Properties"
			doc:id="84c367b2-e1f4-4c95-a203-e7d08e763349">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="storeIpProperties" ><![CDATA[%dw 2.0
output application/json
---
(vars.storeIpProperties) map (item, index) -> {
	gatewayIp: item.gateway_ip,
	printerIp: item.printer_ip,
	serverIp: item.server_ip
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="IP Address is not null"
			doc:id="6f6d160c-3f20-4a3d-b3c3-8badbe149ab2">
			<when expression="#[vars.storeIpProperties.serverIp != null]">
				<logger level="INFO" doc:name="DEBUG: Service Request" doc:id="3e65925b-d103-4b6e-9d23-75b7fd0f996e" message="Request=#[vars.postTransactionXML]"/>
				<http:request method="POST" doc:name="Request ResPosApi" doc:id="e81d5c75-0c94-4d76-8897-ea4f0d580b03" target="createCheckServiceResponse" config-ref="HTTP_Request_configuration" path="/ResPosApiWeb/ResPosApiWeb.asmx">
					<http:body ><![CDATA[#[vars.postTransactionXML]]]></http:body>
				</http:request>
				<logger level="INFO" doc:name="DEBUG: Service Response" doc:id="3c74b5ad-d84f-445d-826c-0b4c549239ef" message="Response=#[vars.createCheckServiceResponse]"/>
				<ee:transform doc:name="Transform Message" doc:id="0b3d76ab-d1c5-4f37-b836-1351abf53cf9">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="createCheckServiceResponse" ><![CDATA[%dw 2.0
output application/json
---
{
	status: "",
	response: ""
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<choice doc:name="Check Response"
					doc:id="03a33763-1784-471f-ade3-69882f6aa972">
					<when
						expression='#[vars.createCheckServiceResponse.status == "Failed"]'>
						<os:retrieve doc:name="Retrieve Error Message Details"
							doc:id="e7a63b49-cbea-4ee5-9994-d78f6f688064" key="ErrorMessage"
							target="errorMessageDetails" />
						<ee:transform doc:name="errorDescription"
							doc:id="6c8982a9-e1fb-4257-b3d0-ccabdd2dbdbd">
							<ee:message>
							</ee:message>
							<ee:variables>
								<ee:set-variable variableName="errorDescription"><![CDATA[%dw 2.0
var arr = ((vars.errorMessageDetails filter ($.message_number as String == vars.createCheckServiceResponse.response)).custom_message_text)
var size = if(arr == null) 0 else sizeOf (arr)
output application/java
---
if((size>0)) (arr[0]) else (vars.createCheckServiceResponse.response ++ " This is a new error code. Kindly check with POS Team")]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="INFO: Web Service call successfull" doc:id="8b1c871c-89f4-483b-bbd9-dbae0b4e491f" message="Web Service call successfull"/>
					</otherwise>
				</choice>
				<choice doc:name="Check Response"
					doc:id="19790038-2c23-4127-9d75-b2ec25d90774">
					<when
						expression="#[vars.createCheckServiceResponse.status == 'Success']">
						<logger level="INFO" doc:name="INFO: Success"
							doc:id="c5adca61-826b-44ba-93a0-5442518e3f48"
							message="Web Service call was successfull" />
						<flow-ref doc:name="send-order-to-mail"
							doc:id="f1d34c22-4ebe-484d-b995-f4b5263dc3bd"
							name="send-order-to-mail" />
						<wsc:consume doc:name="TGIF Web Service call"
							doc:id="6c874b91-dda6-4da4-be65-9f77502293e3"
							config-ref="Web_Service_Consumer_Config" operation="GetMicrosDOB" target="tgifServiceResponse">
							<wsc:message>
								<wsc:body><![CDATA[#[%dw 2.0
output application/xml
ns tem http://tempuri.org/
---
{
	tem#GetMicrosDOB: {
	}
}]]]></wsc:body>
							</wsc:message>
						</wsc:consume>
						<set-variable value="#[%dw 2.0&#10;output application/json&#10;ns ns0 http://tempuri.org/&#10;---&#10;vars.tgifServiceResponse.ns0#GetMicrosDOBResponse.ns0#GetMicrosDOBResult as String]" doc:name="dayOfBusiness" doc:id="c2f4b891-bab8-4570-8764-4e6990da227d" variableName="dayOfBusiness"/>
						<ee:transform doc:name="Create Check JSON" doc:id="685f5ef5-1462-4213-9369-4197fa8230cc">
							<ee:message>
							</ee:message>
							<ee:variables >
								<ee:set-variable resource="dwl/create-check/create-check.dwl" variableName="createCheck" />
							</ee:variables>
						</ee:transform>
						<set-variable value="#[output application/json&#10;---&#10;{&#10;	methodName: 'CreateCheck',&#10;	storeId: if ( vars.storeId != null ) vars.storeId else vars.vrStoreId,&#10;	checkNumber: vars.createCheck.createcheck.check.checkId,&#10;	checkSequence: vars.createCheck.createcheck.check.checkSeq,&#10;	employeeNumber: vars.createCheck.createcheck.check.employeeNumber,&#10;	tableNumber: vars.createCheck.createcheck.check.tableNumber,&#10;	status: '1',&#10;	message: vars.createCheck&#10;}]" doc:name="logData" doc:id="ac29d5aa-f9a1-4458-afe9-dca11e43902a" variableName="logData"/>
						<flow-ref doc:name="insert-online-ordering-logs" doc:id="b9160f75-2045-4d56-bab6-de3ff126864a" name="insert-online-ordering-logs"/>
						<choice doc:name="Check Delivery Partner" doc:id="6090368a-9778-4d9d-a6f1-725cccddde12">
							<when expression='#[using(subject = vars.tenderId.messageSubject) subject != "Grub Hub Delivery" and subject != "Uber Eats Delivery" and subject != "Postmates Delivery" and subject != "Door Dash Delivery"]'>
								<set-variable value="#[{&#10;	storeId: vars.storeId,&#10;	cartId: vars.createCheckVars.cartId,&#10;	payload: vars.createCheck,&#10;	dayofBusiness: vars.createCheck.dayOfBusiness&#10;}]" doc:name="Cart Log Data" doc:id="33eb7c68-1585-4db7-9b57-94a93a691053" variableName="logData" />
								<flow-ref doc:name="insert-cart-id-logs" doc:id="b3856a74-ed3d-4b5e-b12b-6eed4c9edb64" name="insert-cart-id-logs" />
								<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	deliveryPartnerName: vars.tenderId.messageSubject,&#10;	storeId: vars.storeId,&#10;	orderId: vars.createCheckVars.cartId,&#10;	checkNumber: vars.createCheck.createcheck.check.checkId,&#10;	dayofBusiness:vars.createCheck.createcheck.dayOfBusiness,&#10;	deliveryMethod: ' Pickup',&#10;	status: 'success',&#10;	subTotal: if ( vars.initialPayload.createcheck.payment.subtotalNoDiscountsPlusTaxes == null or vars.initialPayload.createcheck.payment.taxTotal ==  null ) 'NULL'&#10;	else (((vars.initialPayload.createcheck.payment.subtotalNoDiscountsPlusTaxes as Number) - (vars.initialPayload.createcheck.payment.taxTotal as Number)) as String),&#10;	taxTotal: vars.initialPayload.createcheck.payment.taxTotal,&#10;	agentId: vars.initialPayload.createcheck.agentId default &quot;&quot;&#10;}]" doc:name="Delivery Order Log Data" doc:id="bf01c2f4-9895-4b9d-9129-20a2d8e213dc" variableName="deliveryOrderDetails" />
								<flow-ref doc:name="insert-delivery-order-details" doc:id="9171196d-77a7-4b1e-93d9-c623e6402923" name="insert-delivery-order-details" />
							</when>
							<otherwise >
								<logger level="INFO" doc:name="INFO: Logger" doc:id="d5301b82-3d75-462e-9e03-1563be315a28" message="Grub Hub delivery or Doordash delivery or UberEats delivery or Postmates delivery"/>
							</otherwise>
						</choice>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="INFO: Web Service call failed" doc:id="03f5bffe-f03a-4d63-a793-7cbf51bdff4f" message="Web Service call failed"/>
						<ee:transform doc:name="Transform Message" doc:id="40f19ad1-e7d7-475d-9e84-5f7188b7ac59" >
							<ee:message >
								<ee:set-payload resource="dwl/create-check/failure-payload.dwl" />
							</ee:message>
							<ee:variables >
								<ee:set-variable variableName="emailMessage" ><![CDATA[%dw 2.0
output application/json
---
if ( vars.createCheckServiceResponse.response == "Store server not reachable, able to reach Firewall" ) "Store server not reachable, able to reach Firewall " ++ vars.storeId ++ " in CreateCheck method"
else if ( vars.createCheckServiceResponse.response == "Store network unreachable at Firewall" ) "Store network unreachable at Firewall " ++ vars.storeId ++ " in CreateCheck method"
else ""]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
						<choice doc:name="Send Email?" doc:id="a8ed260e-1561-4c42-9992-486f99ba34ba" >
							<when expression='#[vars.createCheckServiceResponse.response == "Store server not reachable, able to reach Firewall" or vars.createCheckServiceResponse.response == "Store network unreachable at Firewall"]'>
								<flow-ref doc:name="send-email-notification" doc:id="c049463f-4033-4de0-b9f2-2562566e3365" name="send-email-notification"/>
							</when>
							<otherwise >
								<logger level="INFO" doc:name="INFO: No email triggered" doc:id="98de8a0a-fb8e-4352-9d7e-c715c99cfcdd" message="No Email triggered"/>
							</otherwise>
						</choice>
						<choice doc:name="Check Delivery Partner" doc:id="30f4d89c-1865-44c8-a6b7-65f4c3520841" >
							<when expression='#[vars.tenderId.messageSubject != "Grub Hub Delivery" and vars.tenderId.messageSubject != "Uber Eats Delivery" and vars.tenderId.messageSubject != "Postmates Delivery" and vars.tenderId.messageSubject != "Door Dash Delivery"]'>
								<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	deliveryPartnerName: vars.tenderId.messageSubject,&#10;	storeId: vars.storeId,&#10;	orderId: vars.createCheckVars.cartId,&#10;	checkNumber: 'NULL',&#10;	dayofBusiness: (now() &gt;&gt; &quot;CST&quot;) as Date {&#10;		format: &quot;MM/dd/yyyy&quot;&#10;	},&#10;	deliveryMethod: ' Pickup',&#10;	status: 'success',&#10;	subTotal: if ( vars.initialPayload.createcheck.payment.subtotalNoDiscountsPlusTaxes == null or vars.initialPayload.createcheck.payment.taxTotal ==  null ) 'NULL'&#10;	else (((vars.initialPayload.createcheck.payment.subtotalNoDiscountsPlusTaxes as Number) - (vars.initialPayload.createcheck.payment.taxTotal as Number)) as String),&#10;	taxTotal: vars.initialPayload.createcheck.payment.taxTotal,&#10;	agentId: vars.initialPayload.createcheck.agentId default &quot;&quot;&#10;}]" doc:name="Delivery Order Log Data" doc:id="28e80786-2db2-423b-aa1d-00a22acc0ac8" variableName="deliveryOrderDetails"/>
								<flow-ref doc:name="insert-delivery-order-details" doc:id="f37e78a2-8e85-4b3b-98d0-7674da0189bc" name="insert-delivery-order-details"/>
							</when>
							<otherwise >
								<logger level="INFO" doc:name="INFO: Logger" doc:id="779d1453-d7f2-46b2-a955-c458d94055a7" message="Grub Hub delivery or Doordash delivery or UberEats delivery or Postmates delivery"/>
							</otherwise>
						</choice>
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<set-variable value="#['Store Number ' ++ vars.storeId ++ ' not setup in mulesoft for online ordering']" doc:name="emailMessage" doc:id="c218e312-47b8-4bae-87c8-82bbe7a2f555" variableName="emailMessage"/>
				<logger level="INFO" doc:name="INFO: Logger" doc:id="fa624a93-ca71-4011-b9a2-4542844a9cbe" message="#[vars.emailMessage]"/>
				<flow-ref doc:name="send-email-notification" doc:id="48b28b59-9bb8-4809-b029-878bf3ef4108" name="send-email-notification" />
				<set-variable
			value="#[output application/json&#10;---&#10;{&#10;	methodName: 'CreateCheck',&#10;	storeId: if ( vars.storeId != null ) vars.storeId else vars.vrStoreId,&#10;	checkNumber: 'Null',&#10;	checkSequence: 'Null',&#10;	employeeNumber: 'Null',&#10;	tableNumber: 'Null',&#10;	status: '1',&#10;	message: &quot;Store server not reachable, able to reach Firewall&quot;&#10;}]"
			doc:name="logData" doc:id="4046e051-c0d9-401e-832d-367a2ab6264b"
			variableName="logData" />
		<flow-ref doc:name="insert-online-ordering-logs"
			doc:id="8f0db013-2ba9-4548-9df7-bf8489098da2"
			name="insert-online-ordering-logs" />
				<choice doc:name="Check Delivery Partner" doc:id="3d9c0dc0-0227-4144-a18f-cf2b45166163" >
					<when expression='#[vars.tenderId.messageSubject != "Grub Hub Delivery" and vars.tenderId.messageSubject != "Uber Eats Delivery" and vars.tenderId.messageSubject != "Postmates Delivery" and vars.tenderId.messageSubject != "Door Dash Delivery"]'>
						<ee:transform doc:name="Transform Message" doc:id="ab2d42e5-9fe6-48c0-b0ed-b6e3f8a3b1e9" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	createcheck: {
		result: {
			status: "failure",
			message: "Unable to find check Bad Response returned from micros"
		}
	}
}]]></ee:set-payload>
							</ee:message>
							<ee:variables >
								<ee:set-variable variableName="deliveryOrderDetails" ><![CDATA[%dw 2.0
output application/json
---
{
	deliveryPartnerName: vars.tenderId.messageSubject,
	storeId: vars.storeId,
	orderId: vars.createCheckVars.cartId,
	checkNumber: 'NULL',
	dayofBusiness: (now() >> "CST") as Date {
		format: "MM/dd/yyyy"
	},
	deliveryMethod: ' Pickup',
	status: 'failed',
	subTotal: if ( vars.initialPayload.createcheck.payment.subtotalNoDiscountsPlusTaxes == null or vars.initialPayload.createcheck.payment.taxTotal ==  null ) 'NULL'
	else (((vars.initialPayload.createcheck.payment.subtotalNoDiscountsPlusTaxes as Number) - (vars.initialPayload.createcheck.payment.taxTotal as Number)) as String),
	taxTotal: vars.initialPayload.createcheck.payment.taxTotal,
	agentId: vars.initialPayload.createcheck.agentId default ""
}]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
						<flow-ref doc:name="insert-delivery-order-details" doc:id="70f4a97f-6b4e-45fe-9660-89171b457e2d" name="insert-delivery-order-details"/>
					</when>
					<otherwise >
						<ee:transform doc:name="Transform Message" doc:id="a12fa88f-2bb0-49ff-ac53-8b9564e8ccc1">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	createcheck: {
		result: {
			status: "failure",
			message: "Store server not reachable, able to reach Firewall"
		}
	}
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="INFO: Logger" doc:id="d83ff175-bc3f-4943-a598-6c72e9592849" message="Grub Hub delivery or Doordash delivery or UberEats delivery or Postmates delivery"/>
					</otherwise>
				</choice>
		
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="send-order-to-mail" doc:id="75b17d5b-cc56-4bbe-87f2-16ba970ff8cd" >
		<logger level="INFO" doc:name="INFO: Called send order to email flow" doc:id="b2379ba5-e6d2-469e-a017-194eea64078d" message="Called send order to email flow"/>
		<ee:transform doc:name="Transform Message" doc:id="c53e0e1f-cdc0-4a29-bead-23cceee403ea" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="stripesCodeArgs" ><![CDATA[%dw 2.0
output application/json
fun getMonth(date) = ((date splitBy " ")[0] replace "'" with "-") as Date {format: "MMMdd-yy"} as String {format: "M"} as Number
fun getDay(date) = ((date splitBy " ")[0] replace "'" with "-") as Date {format: "MMMdd-yy"} as String {format: "d"} as Number
fun getChkNumber(date) = (date splitBy " ")[1]
---
{
    month: getMonth(vars.createCheckServiceResponse.response.ppCheckPrintLines.string[10]),
    day: getDay(vars.createCheckServiceResponse.response.ppCheckPrintLines.string[10]),
    checkNumber: getChkNumber(vars.createCheckServiceResponse.response.ppCheckPrintLines.string[9]) 
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<java:invoke-static doc:name="Stripes Code" doc:id="b5c5e826-5287-42e4-b9b8-74371ab457fa" target="stripesCode" class="com.api.tgif.mobilepos.util.CommonUtil" method="StripesCode">
			<java:args ><![CDATA[#[{
	storeNumber: vars.storeId as Number, 
	subTotal: vars.createCheckServiceResponse.response.pTotalsResponse.TotalsSubTotal, 
	month: vars.stripesCodeArgs.month, 
	day: vars.stripesCodeArgs.day, 
	checkNumber: vars.stripesCodeArgs.checkNumber
}]]]></java:args>
		</java:invoke-static>
		<async doc:name="Async" doc:id="08f77de5-76c8-4a3e-97bd-d622d587bb6d" >
			<ee:transform doc:name="Set Email Message" doc:id="d6a42f53-8e89-4c2f-afe4-25fc145b50f6" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable resource="dwl/create-check/email-message.dwl" variableName="emailMessage" />
				</ee:variables>
			</ee:transform>
			<choice doc:name="Check Email Message" doc:id="ce22d4e6-ff91-47de-a122-916d8e0e6343" >
				<when expression='#[vars.emailMessage != "Print Check Lines not found"]'>
					<flow-ref doc:name="send-create-email-notification" doc:id="69cdc0c1-6b90-4042-a983-97f5e879becb" name="send-create-email-notification"/>
					<logger level="INFO" doc:name="INFO: Logger" doc:id="115eb29a-50e2-4584-91b9-18d761393e42" message="Email Online Order Check Lines to store Method Completed"/>
					<set-variable value="#[output application/json&#10;---&#10;{&#10;	methodName: 'SendOrdertoEmail',&#10;	storeId: if ( vars.storeId != null ) vars.storeId else vars.vrStoreId,&#10;	checkNumber: 'Null',&#10;	checkSequence: 'Null',&#10;	employeeNumber: 'Null',&#10;	tableNumber: 'Null',&#10;	status: '1',&#10;	message: vars.emailMessage&#10;}]" doc:name="logData" doc:id="d8b12544-fd38-461a-a21a-a3982dd8d164" variableName="logData"/>
					<flow-ref doc:name="insert-online-ordering-logs" doc:id="419ff3e6-58c4-4b3a-9d49-fe2ad2138fb9" name="insert-online-ordering-logs"/>
				</when>
				<otherwise >
					<set-variable value="#[if(vars.emailMessage == &quot;Print Check Lines not found&quot;) &quot;No print check lines received from micros for store &quot; ++ vars.storeId ++ &quot; in CreateCheck method&quot;&#10;else 'Error occurred while reading Print Check Lines for store ' + vars.storeId ++ &quot; in CreateCheck method. Error message : Exception in Print Check Lines&quot;]" doc:name="emailMessage" doc:id="026a1fbc-73a0-4962-8a4e-0044dad162be" variableName="emailMessage" />
					<logger level="INFO" doc:name="INFO: Email Message" doc:id="48687be1-48e6-4428-9a94-e6527f6ca228" message="#[vars.emailMessage]" />
					<flow-ref doc:name="send-email-notification" doc:id="d8ac5fa2-c70b-406f-87d1-6a34cef65b5d" name="send-email-notification"/>
					<logger level="INFO" doc:name="INFO: Logger" doc:id="5c5d5a2a-cdd6-45a3-bdc8-4957f6838b56" message="Read Print Check Lines Method Completed with Errors"/>
					<set-variable value="#[output application/json&#10;---&#10;{&#10;	methodName: 'SendOrdertoEmail',&#10;	storeId: if ( vars.storeId != null ) vars.storeId else vars.vrStoreId,&#10;	checkNumber: 'Null',&#10;	checkSequence: 'Null',&#10;	employeeNumber: 'Null',&#10;	tableNumber: 'Null',&#10;	status: '0',&#10;	message: vars.emailMessage&#10;}]" doc:name="logData" doc:id="67298980-ed1d-4cc3-842c-9970212fb860" variableName="logData"/>
					<flow-ref doc:name="insert-online-ordering-logs" doc:id="a90ee520-7ddb-49dc-90bc-ea1c30ed4b5a" name="insert-online-ordering-logs"/>
				
</otherwise>
			</choice>
		</async>
	</sub-flow>
	<sub-flow name="get-delivery-partner-orders"
		doc:id="15728ae5-7d4a-4169-a607-f7d052bbd35b">
		<logger level="INFO" doc:name="INFO: Start" doc:id="de214dd4-328b-492c-a62a-bcb118ce41ec" message="Enter Get Delivery Partner order from Object Store flow"/>
		<ee:transform doc:name="Delivery Partner" doc:id="af2ba628-f84f-4976-8cdd-16f87f99e244" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="retrieveKey" ><![CDATA[%dw 2.0
output application/json
---
if(vars.createCheckVars.paymentCardType == "UBE") "uberEatsOrderType"
else if(vars.createCheckVars.paymentCardType == "DD") "doorDashOrderType"
else if(vars.createCheckVars.paymentCardType == "GH") "grubHubOrderType"
else if(vars.createCheckVars.paymentCardType == "PM") "postmatesOrderType"
else ""]]></ee:set-variable>
				<ee:set-variable variableName="deliveryPartner" ><![CDATA[%dw 2.0
output application/json
---
if(vars.createCheckVars.paymentCardType == "UBE") "UberEats"
else if(vars.createCheckVars.paymentCardType == "DD") "DoorDash"
else if(vars.createCheckVars.paymentCardType == "GH") "GrubHub"
else if(vars.createCheckVars.paymentCardType == "PM") "Postmates"
else ""]]></ee:set-variable>
			
</ee:variables>
		</ee:transform>
		<os:retrieve doc:name="Retrieve Delivery Partner Orders" doc:id="d7291d14-abbc-45cf-afc0-c6c5d20cac07" key="#[vars.retrieveKey]" objectStore="Object_store" target="orderType"/>
		<set-variable value="#[output application/json --- ((vars.orderType filter ($.store_id as String == vars.storeId)).order_type_id)[0]]" doc:name="orderType" doc:id="8742b20d-326b-4960-9851-0f4bcb2a1c28" variableName="orderType"/>
		<logger level="INFO" doc:name="INFO: Exit" doc:id="8a9de6d3-bff9-4876-9351-959f029e2759" message="Exit Get Delivery Partner order from Object Store flow"/>
	

</sub-flow>
	<sub-flow name="retrieve-tender-media-details"
		doc:id="7b1214fa-07dc-49ea-81e2-5896fad52029">
		<logger level="INFO" doc:name="INFO: Enter" doc:id="0dc9acae-7568-4c3a-a0e3-f0783b1136e2" message="Enter Get Tender details from Object Store"/>
		<os:retrieve doc:name="Retrieve Tender Media Details"
			doc:id="507a6e87-0240-4344-8496-ec46c5a4297f" key="tenderMedia"
			objectStore="Object_store" target="tenderMedia"/>
		<set-variable value="#[output application/json --- ((vars.tenderMedia filter ($.store_id as String == vars.storeId)).tender_media_object_number)[0]]" doc:name="tenderMedia" doc:id="62bfb746-3988-4842-9d04-40cb10720289" variableName="tenderMedia"/>
		<logger level="INFO" doc:name="INFO: Exit" doc:id="35defe16-3907-4c9f-963f-b50c2e5b09d2" message="Exit Get Tender details from Object Store"/>
	
	</sub-flow>
	<sub-flow name="retrieve-store-ip-properties" doc:id="24d3480f-0fcc-4b73-a6c7-2ce276f156fb" >
		<logger level="INFO" doc:name="INFO: Enter" doc:id="6cdbf02c-1433-414b-8475-8ecd7312955c" message="Enter Get Store IP Properties from Object Store"/>
		<os:retrieve doc:name="Retrieve Store IP Properties" doc:id="e4aa1b57-9a5c-4ee1-a37c-1d5436cc1d1a" key="storeIpProperties" objectStore="Object_store" target="storeIpProperties" />
		<set-variable value="#[output application/json ---(vars.storeIpProperties filter ($.store_id as String == vars.storeId))]" doc:name="storeIpProperties" doc:id="6dbb0d61-d208-4403-9454-6952a698a34e" variableName="storeIpProperties" />
		<logger level="INFO" doc:name="INFO: Exit" doc:id="200393f2-21a6-459e-8be2-08cb66ff9284" message="Exit Get Store IP properties from Object Store"/>
	</sub-flow>
	
	<sub-flow name="insert-duplicate-orders"
		doc:id="2e4a93df-ea30-4df5-bc02-c25701e92a61">
		<set-variable value='#[if(vars.tenderId.messageSubject != "Online Orders") "PayInStore" else "OLO"]' doc:name="deliveryPartner" doc:id="ca9a7114-1b28-4c3b-8cc6-c0bb9471c395" variableName="deliveryPartner" />
		<db:stored-procedure
			doc:name="Call prc_validate_olo_duplicate_orders_insert"
			doc:id="940a2703-243a-401c-a486-1c18c3b9c9a6"
			config-ref="Database_Config_Mule_Interface">
			<db:sql><![CDATA[{ call dbo.prc_validate_olo_duplicate_orders_insert(:store_id,:cart_id,:order_id,:day_of_business,:delivery_partner_name)}]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	store_id: vars.logData.storeId,
	cart_id: vars.logData.cartId,
	orderId: vars.logData.orderId,
	day_of_business: vars.logData.dayOfBusiness,
	delivery_partner_name: vars.deliveryPartner
}]]]></db:input-parameters>
		</db:stored-procedure>
	</sub-flow>
	<sub-flow name="insert-delivery-order-details" doc:id="4e584271-571b-4a8e-a5b4-db07e0572366">
		<async doc:name="Async" doc:id="d5228358-0df0-47d8-a6cd-420a0005c603">
			<db:stored-procedure doc:name="Insert Delivery Order Details" doc:id="aea8f562-a88a-44a8-a791-d4a65831249f" config-ref="Database_Config_Mule_Interface">
				<db:sql><![CDATA[{ call dbo.prc_delivery_order_details_insert(:delivery_partner_name,:store_id,:order_id,:check_number,:day_of_business,:delivery_method,:status,:sub_total,:tax_total,:agent_id)}]]></db:sql>
				<db:input-parameters><![CDATA[#[{
	delivery_partner_name: vars.deliveryOrderDetails.deliveryPartnerName,
	store_id: vars.deliveryOrderDetails.storeId,
	order_id: vars.deliveryOrderDetails.orderId,
	check_number: vars.deliveryOrderDetails.checkNumber,
	day_of_business: if ( vars.deliveryOrderDetails.dayOfBusiness != "0001-01-01" ) vars.deliveryOrderDetails.dayOfBusiness else (now() >> "CST") as Date {
		format: "MM/dd/yyyy"
	},
	delivery_method: vars.deliveryOrderDetails.deliveryMethod,
	status: vars.deliveryOrderDetails.status,
	sub_total:vars.deliveryOrderDetails.subTotal,
	tax_total:vars.deliveryOrderDetails.taxTotal,
	agent_id: vars.deliveryOrderDetails.agentId
}]]]></db:input-parameters>
			</db:stored-procedure>
		</async>
	</sub-flow>
	
	<sub-flow name="send-create-email-notification" doc:id="eca0ef79-a105-453f-adc4-9cd4aca34bae">
		<db:stored-procedure doc:name="Send Email Notification" doc:id="74a24c25-844d-4cea-98e2-bbf6fdb34905" config-ref="Database_Config_Depot" target="sentEmail">
					<db:sql><![CDATA[{call prc_RemoteMail_CreateMessage(:id, :store, :type, :subject,:body, :param1, :param2)}]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	id: 1,
	store: if (sizeOf(vars.storeId) < 4) (1 to (4 - sizeOf(vars.storeId))) map "#" joinBy "" ++ vars.storeId else vars.storeId,
	'type': null,
	subject: vars.tenderId.messageSubject,
	body: vars.emailMessage,
	param1: null,
	param2: null
}]]]></db:input-parameters>
				</db:stored-procedure>
	</sub-flow>
	<sub-flow name="send-email-notification" doc:id="f3278fa1-c635-4f91-b109-3c564b29f5f4" >
		<db:stored-procedure doc:name="Send Email Notification" doc:id="69ff1e53-21d6-4d37-b847-2c9facc3a571" config-ref="Database_Config_Depot">
					<db:sql><![CDATA[{call prc_RemoteMail_RouteMessage(:type, :subject,:body)}]]></db:sql>
					<db:input-parameters><![CDATA[#[{
	'type': "MobilePaymentNotification",
	subject: "Error occurred in Online Ordering API",
	body: vars.emailMessage
}]]]></db:input-parameters>
				</db:stored-procedure>
	</sub-flow>
	<!-- <sub-flow name="serialized-coupon-sub-flow" doc:id="5db58ee3-d2b3-4a87-9b75-eca067665cff" 
		> <logger level="INFO" doc:name="INFO: Start" doc:id="513cc75d-a817-4074-aa82-95c0dcde8ce5" 
		message="#[vars.storeId] - Create Check Validate Serialized Coupon"/> <ee:transform 
		doc:name="Transform Message" doc:id="2416746b-49bc-467f-a82b-9d92ef40f3b8" 
		> <ee:message > </ee:message> <ee:variables > <ee:set-variable variableName="lookupData" 
		><![CDATA[%dw 2.0 output application/json -&#45;&#45; { requestCode: 'SV_ACCEPT_COUPON', 
		retransmit: 'N', terminalId: '1', siteId: 1, employeeId: '98008', posPlatform: 
		'3700', amount: '0.00', localDate: now() as Date { format: "yyyyMMdd" }, 
		localTime: now() as DateTime { format:"HHmmss" }, revenueCenter: '5', terminalType: 
		'1', version: '8', timeOut: '120', language: 'en_US', currency: 'USD', sequence: 
		'01', quantity: '1' }]]></ee:set-variable> <ee:set-variable variableName="couponStoreId" 
		><![CDATA[%dw 2.0 output application/json -&#45;&#45; vars.storeId]]></ee:set-variable> 
		</ee:variables> </ee:transform> <choice doc:name="Choice" doc:id="a491ed30-77d0-453b-92e7-211e45d7003e" 
		> <when expression="#[vars.createCheckVars.orderDiscountNum == null and vars.orderDiscountNum.serializedCouponCode 
		!= null]"> <logger level="INFO" doc:name="INFO: Coupon Found" doc:id="c118af9e-4a79-4fc5-ac55-b8e3ec8f43b3" 
		message="Serialized Coupon Found"/> <ee:transform doc:name="Transform Message" 
		doc:id="e9e5224b-1a95-4d1a-b216-556d9f23915c" > <ee:message > </ee:message> 
		<ee:variables > <ee:set-variable variableName="couponMetadata" ><![CDATA[%dw 
		2.0 output application/json fun getCheckNumber() = "9" ++ now().millisecond 
		fun getMonthString() = using(month = now().month as String) if(sizeOf(month) 
		== 1) ("00" ++ month) else "0" ++ month fun getDayString() = using(day = 
		now().day as String) if(sizeOf(day) == 1) ("00" ++ day) else "0" ++ day fun 
		getHourString() = using(hour = now().hour as String) if(sizeOf(hour) == 1) 
		("00" ++ hour) else "0" ++ hour fun getMinString() = using(min = now().minutes 
		as String) if(sizeOf(min) == 1) ("00" ++ min) else "0" ++ min fun getSecString() 
		= using(sec = now().seconds as String) if(sizeOf(sec) == 1) ("00" ++ sec) 
		else "0" ++ sec -&#45;&#45; { checkNumber: getCheckNumber(), checkSequence: 
		"8" ++ now().milliseconds, traceId: now() as DateTime {format: "yyMMddHHmmss"}, 
		//(now().year) ++ getMonthString() ++ getDayString() ++ getHourString() ++ 
		getMinString() ++ getSecString() ++ "N01" ++ getCheckNumber(), localTime: 
		now() as DateTime {format: "HHmmss"} }]]></ee:set-variable> </ee:variables> 
		</ee:transform> <ee:transform doc:name="acceptCouponXML" doc:id="a189fc92-34ee-40e2-a21c-0bb8ebe42f64" 
		> <ee:message > </ee:message> <ee:variables > <ee:set-variable variableName="acceptCouponXML" 
		><![CDATA[%dw 2.0 output application/xml -&#45;&#45; { SVCMessage @(version: 
		vars.lookupData.version as Number , timeout: vars.lookupData.timeOut as Number 
		, language: vars.lookupData.language , currency: vars.lookupData.currency 
		, sequence: vars.lookupData.sequence as Number): { RequestCode: vars.lookupData.requestCode, 
		CouponCode: payload.createcheck.serializedCoupon.couponCode, CheckSummary: 
		{ MenuItems: { (payload.createcheck.menuItems.resposapiMenuItem map ((value 
		, index) -> { MI @(ID: (value.menuItem.miAltItemId replace "a" with "") as 
		Number , QTY: vars.lookupData.quantity as Number): { "text()": value.menuItem.miPrice 
		} })) }, Totals @(ttlDue: payload.createcheck.payment.subtotalNoDiscountsPlusTaxes 
		as Number , ttlTax: payload.createcheck.payment.taxTotal as Number , ttlSvc: 
		vars.lookupData.amount as Number , ttlPay: vars.lookupData.amount as Number): 
		{ } }, TraceID: vars.couponMetadata.traceId, TerminalID: vars.lookupData.terminalId 
		as Number, TerminalType: vars.lookupData.terminalType, TipAmount: vars.lookupData.amount 
		as Number, Amount: vars.lookupData.amount as Number, LocalCurrency: vars.lookupData.currency, 
		LocalDate: vars.lookupData.localDate as Number, LocalTime: vars.couponMetadata.localTime, 
		PosPlatform: vars.lookupData.posPlatform as Number, BusinessDate: vars.lookupData.localDate 
		as Number, CheckNumber: vars.couponMetadata.checkNum as Number, CheckSequence: 
		vars.couponMetadata.checkSeq as Number, TransactionEmployee: vars.lookupData.employeeId 
		as Number, RevenueCenter: vars.lookupData.revenueCenter as Number, Site: 
		vars.lookupData.siteId } }]]></ee:set-variable> </ee:variables> </ee:transform> 
		</when> <otherwise > <set-variable value="#[{ &#10; methodName: 'CreateCheck', 
		&#10; storeId: if(vars.storeId != null) vars.storeId else vars.vrStoreId,, &#10; checkNumber: 'Null', &#10; checkSequence: 
		'Null', &#10; employeeNumber: 'Null', &#10; tableNumber: 'Null', &#10; status: 
		'1', &#10; message: &quot;No serialized coupon found&quot; &#10;}]" doc:name="logData" 
		doc:id="85919a9e-1292-486a-866a-2fc3259ed2d3" variableName="logData"/> <flow-ref 
		doc:name="insert-online-ordering-logs" doc:id="84fb7aad-5e26-4ad9-aa87-0191ef2163eb" 
		name="insert-online-ordering-logs" /> </otherwise> </choice> </sub-flow> -->
</mule>
